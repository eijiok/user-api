// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	errors "github.com/eijiok/user-api/errors"

	mock "github.com/stretchr/testify/mock"
)

// RequestResponseErrorFunc is an autogenerated mock type for the RequestResponseErrorFunc type
type RequestResponseErrorFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: writer, request
func (_m *RequestResponseErrorFunc) Execute(writer http.ResponseWriter, request *http.Request) *errors.HttpError {
	ret := _m.Called(writer, request)

	var r0 *errors.HttpError
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request) *errors.HttpError); ok {
		r0 = rf(writer, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*errors.HttpError)
		}
	}

	return r0
}

type mockConstructorTestingTNewRequestResponseErrorFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewRequestResponseErrorFunc creates a new instance of RequestResponseErrorFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRequestResponseErrorFunc(t mockConstructorTestingTNewRequestResponseErrorFunc) *RequestResponseErrorFunc {
	mock := &RequestResponseErrorFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
