// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	interfaces "github.com/eijiok/user-api/interfaces"
	mock "github.com/stretchr/testify/mock"
)

// MiddlewareFunc is an autogenerated mock type for the MiddlewareFunc type
type MiddlewareFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: handler
func (_m *MiddlewareFunc) Execute(handler interfaces.RequestResponseErrorFunc) interfaces.RequestResponseErrorFunc {
	ret := _m.Called(handler)

	var r0 interfaces.RequestResponseErrorFunc
	if rf, ok := ret.Get(0).(func(interfaces.RequestResponseErrorFunc) interfaces.RequestResponseErrorFunc); ok {
		r0 = rf(handler)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.RequestResponseErrorFunc)
		}
	}

	return r0
}

type mockConstructorTestingTNewMiddlewareFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewMiddlewareFunc creates a new instance of MiddlewareFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMiddlewareFunc(t mockConstructorTestingTNewMiddlewareFunc) *MiddlewareFunc {
	mock := &MiddlewareFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
